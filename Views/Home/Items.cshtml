@{
    ViewData["Title"] = "Items";
}

<div style="min-height: 90vh!important;" class="text-center row h-100">
    <h1 class="display-4">Items</h1>
    <div id="itemsGridContainer"></div>
</div>

<script>
    var store = new DevExpress.data.CustomStore({
        key: 'itemId',
        load() {
            return sendRequest("@Url.Content("~/Item/GetItems")");
        },
        insert(values) {
            return sendRequest("@Url.Content("~/Item/AddItem")", 'POST', {
                values: JSON.stringify(values),
            });
        },
        update(key, values) {
            return sendRequest("@Url.Content("~/Item/EditItem")", 'POST', {
                key,
                values: JSON.stringify(values),
            });
        },
        remove(key) {
            return sendRequest("@Url.Content("~/Item/DeleteItem")", 'POST', {
                key,
            });
        },
    });

    $('#itemsGridContainer').dxDataGrid({
        dataSource: store,
        remoteOperations: false,
        columns: [
            {
                dataField: 'name',
                dataType: 'string',
            },
            {
                dataField: 'weight',
                dataType: 'string',
            },
            {
                dataField: 'value',
                dataType: 'string',
            },
            {
                dataField: 'type',
                dataType: 'string',
            },
            {
                dataField: 'magic',
                dataType: 'string',
            },
            {
                dataField: 'attunement',
                dataType: 'string',
            },
            {
                dataField: 'rarity',
                dataType: 'string',
            },
            {
                dataField: 'source',
                dataType: 'string',
            }
        ],
        paging: {
            pageSize: 10,
        },
        pager: {
            visible: true,
            allowedPageSizes: [5, 10, 25, 50, 100],
            showPageSizeSelector: true,
            showInfo: true,
            showNavigationButtons: true,
        },
        filterRow: {
            visible: true,
        },
        headerFilter: {
            visible: true,
        },
        groupPanel: {
            visible: true,
        },
        scrolling: {
            mode: 'virtual',
        },
        height: 600,
        showBorders: true,
        grouping: {
            autoExpandAll: false,
        },
        editing: {
            mode: 'form',
            allowAdding: true,
            allowUpdating: true,
            allowDeleting: true,
        },
    });

    function sendRequest(url, method = 'GET', data) {
        const d = $.Deferred();

        //logRequest(method, url, data);

        $.ajax(url, {
            method,
            data,
            cache: false,
            xhrFields: { withCredentials: true },
        }).done((result) => {
            d.resolve(method === 'GET' ? result : result);
        }).fail((xhr) => {
            d.reject(xhr.responseJSON ? xhr.responseJSON.Message : xhr.statusText);
        });

        return d.promise();
    }

    function logRequest(method, url, data) {
        const args = Object.keys(data || {}).map((key) => `${key}=${data[key]}`).join(' ');

        const logList = $('#requests ul');
        const time = DevExpress.localization.formatDate(new Date(), 'HH:mm:ss');
        const newItem = $('<li>').text([time, method, url.slice(URL.length), args].join(' '));

        logList.prepend(newItem);
    }
</script>